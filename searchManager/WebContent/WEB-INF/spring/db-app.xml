<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
    xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.xsd">

	<beans:bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
         <beans:property name="location" value="file:/home/widgetti/conf/database.properties"/>
    </beans:bean>
    
    <beans:bean id="dataSource_solr" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close" scope="singleton">
       <beans:property name="driverClassName" value="${driverClassName}"/>
       <beans:property name="url" value="${url}"/>
       <beans:property name="username" value="${username}"/>
       <beans:property name="password" value="${password}"/>
       <beans:property name="validationQuery" value="select 1"/>
  	   <beans:property name="testOnBorrow" value="true"/>
  	   <beans:property name="testOnReturn" value="false"/>
    </beans:bean>
	
	<!--  dao services -->	
	<beans:bean name="jdbcTemplate" id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate" scope="singleton">
		<beans:constructor-arg ref="dataSource_solr" />
	</beans:bean>
	<beans:bean name="elevateDao" id="elevateDAO" class="com.search.manager.dao.sp.ElevateDAO" scope="singleton">
		<beans:constructor-arg ref="jdbcTemplate" />
	</beans:bean>
	<beans:bean name="keywordDao" id="keywordDAO" class="com.search.manager.dao.sp.KeywordDAO" scope="singleton">
		<beans:constructor-arg ref="jdbcTemplate" />
	</beans:bean>
	<beans:bean name="storeKeywordDao" id="storeKeywordDAO" class="com.search.manager.dao.sp.StoreKeywordDAO" scope="singleton">
		<beans:constructor-arg ref="jdbcTemplate" />
	</beans:bean>
	<beans:bean name="excludeDao" id="excludeDAO" class="com.search.manager.dao.sp.ExcludeDAO" scope="singleton">
		<beans:constructor-arg ref="jdbcTemplate" />
	</beans:bean>
	<beans:bean name="auditTrailDao" id="auditTrailDAO" class="com.search.manager.dao.sp.AuditTrailDAO" scope="singleton">
		<beans:constructor-arg ref="jdbcTemplate" />
	</beans:bean>
	<beans:bean name="bannerDao" id="bannerDAO" class="com.search.manager.dao.sp.BannerDAO" scope="singleton">
		<beans:constructor-arg ref="jdbcTemplate" />
	</beans:bean>
	<beans:bean name="campaignDao" id="campaignDAO" class="com.search.manager.dao.sp.CampaignDAO" scope="singleton">
		<beans:constructor-arg ref="jdbcTemplate" />
	</beans:bean>
	<beans:bean name="relevancyDao" id="relevancyDAO" class="com.search.manager.dao.sp.RelevancyDAO" scope="singleton">
		<beans:constructor-arg ref="jdbcTemplate" />
	</beans:bean>
	<beans:bean name="categoryDao" id="categoryDAO" class="com.search.manager.dao.sp.CategoryDAO" scope="singleton">
		<beans:constructor-arg ref="jdbcTemplate" />
	</beans:bean>
	<beans:bean name="redirectRuleDao" id="redirectRuleDAO" class="com.search.manager.dao.sp.RedirectRuleDAO" scope="singleton">
		<beans:constructor-arg ref="jdbcTemplate" />
	</beans:bean>
	
</beans:beans>